---

# https://www.nomadproject.io/docs/vault-integration/index.html#token-role-based-integration

- name: Download Nomad policy and Nomad token role
  get_url:
    dest: /tmp
    url: "{{ item }}"
    validate_certs: no
  with_items:
  - https://nomadproject.io/data/vault/nomad-server-policy.hcl
  - https://nomadproject.io/data/vault/nomad-cluster-role.json
  register: response
  become: yes

- set_fact:
    root_token: "{{ lookup('consul_kv', 'bootstrap/vault/initial-root-token') }}"

- name: Write Nomad policy to Vault and create Nomad token role with Vault
  command: "{{ item }}"
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: "{{ root_token }}"
  with_items:
  - /usr/local/bin/vault policy-write nomad-server {{ response.results[0].dest }}
  - /usr/local/bin/vault write /auth/token/roles/nomad-cluster @{{ response.results[1].dest }}
  when: response.results is defined
  become: yes

- name: Retrieving Nomad Token Role based Token
  command: /usr/local/bin/vault token-create -policy nomad-server -period 72h -orphan
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: "{{ root_token }}"
  register: response
  become: yes

  # Nomad Token Role token
  # https://www.nomadproject.io/docs/vault-integration/index.html#retrieving-the-token-role-based-token
- set_fact:
    vault_token: "{{ response.stdout_lines[2].split()[-1] }}"
  when: >
    response.rc == 0 and
    response.stdout_lines is defined
